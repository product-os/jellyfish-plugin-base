{
  "name": "@balena/jellyfish-plugin-base",
  "version": "1.2.21",
  "repository": {
    "type": "git",
    "url": "https://github.com/product-os/jellyfish-plugin-base.git"
  },
  "engines": {
    "node": ">=12.15.0"
  },
  "description": "Base for all Jellyfish plugins",
  "main": "build/index.js",
  "types": "build/index.d.ts",
  "files": [
    "build/"
  ],
  "directories": {
    "lib": "lib"
  },
  "deplint": {
    "files": [
      "lib/**/*.{ts}"
    ],
    "modules": [
      "lib"
    ]
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "balena-lint --typescript --fix",
      "npm run doc"
    ]
  },
  "scripts": {
    "clean": "rimraf build",
    "build": "npm run clean && tsc",
    "lint": "balena-lint --typescript lib test && npm run check && deplint && depcheck --ignore-bin-package --ignores=shellcheck,@types/jest",
    "lint-fix": "balena-lint --typescript --fix lib test",
    "unit": "jest",
    "test": "npm run doc && catch-uncommitted --skip-node-versionbot-changes && npm run lint && npm run unit",
    "doc": "typedoc lib/ && touch docs/.nojekyll",
    "prepack": "npm run build",
    "check": "./scripts/check-filenames.sh && ./scripts/check-licenses.sh && ./scripts/check-deployable-lib.sh && shellcheck ./scripts/*.sh",
    "postinstall": "if [ -z \"$CI\" ] && [ -d \".git\" ]; then husky install; fi"
  },
  "author": "Balena.io. <hello@balena.io>",
  "license": "UNLICENSED",
  "dependencies": {
    "@balena/jellyfish-logger": "^1.0.33",
    "json-schema": "^0.3.0",
    "lodash": "^4.17.21",
    "semver": "^7.3.4",
    "skhema": "^5.3.3"
  },
  "devDependencies": {
    "@balena/lint": "^5.4.1",
    "@types/jest": "^26.0.20",
    "@types/semver": "^7.3.4",
    "@types/sinon": "^9.0.10",
    "catch-uncommitted": "^1.6.2",
    "depcheck": "^1.4.0",
    "deplint": "^1.1.3",
    "husky": "^5.1.1",
    "jest": "^26.6.3",
    "lint-staged": "^10.5.4",
    "shellcheck": "^1.0.0",
    "sinon": "^9.2.4",
    "ts-jest": "^26.5.2",
    "typedoc": "^0.20.28",
    "typescript": "^4.2.2"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
